#pragma checksum "C:\Users\dient\source\repos\it_tools\it_tools\Presentation\Views\ManagerPage.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "7D4529A96565D71661C862F25E49DEA433DB96FB961708D5BE01834B1D8866B5"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace it_tools.Presentation.Views
{
    partial class ManagerPage : 
        global::Microsoft.UI.Xaml.Controls.Page, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Microsoft.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(global::Microsoft.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(global::Microsoft.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedValue = value;
            }
            public static void Set_Microsoft_UI_Xaml_FrameworkElement_Tag(global::Microsoft.UI.Xaml.FrameworkElement obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Tag = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ManagerPage_obj5_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IManagerPage_Bindings
        {
            private global::it_tools.DataAccess.Models.Tool dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj5;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj6;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj7;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj8;
            private global::Microsoft.UI.Xaml.Controls.Button obj9;
            private global::Microsoft.UI.Xaml.Controls.Button obj10;
            private global::Microsoft.UI.Xaml.Controls.Button obj11;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj6TextDisabled = false;
            private static bool isobj7TextDisabled = false;
            private static bool isobj8SelectedValueDisabled = false;
            private static bool isobj8TagDisabled = false;
            private static bool isobj9TagDisabled = false;
            private static bool isobj10TagDisabled = false;
            private static bool isobj11TagDisabled = false;

            private ManagerPage_obj5_BindingsTracking bindingsTracking;

            public ManagerPage_obj5_Bindings()
            {
                this.bindingsTracking = new ManagerPage_obj5_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 89 && columnNumber == 44)
                {
                    isobj6TextDisabled = true;
                }
                else if (lineNumber == 91 && columnNumber == 44)
                {
                    isobj7TextDisabled = true;
                }
                else if (lineNumber == 94 && columnNumber == 43)
                {
                    isobj8SelectedValueDisabled = true;
                }
                else if (lineNumber == 95 && columnNumber == 44)
                {
                    isobj8TagDisabled = true;
                }
                else if (lineNumber == 105 && columnNumber == 62)
                {
                    isobj9TagDisabled = true;
                }
                else if (lineNumber == 106 && columnNumber == 63)
                {
                    isobj10TagDisabled = true;
                }
                else if (lineNumber == 107 && columnNumber == 62)
                {
                    isobj11TagDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 5: // Presentation\Views\ManagerPage.xaml line 87
                        this.obj5 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Border>(target));
                        break;
                    case 6: // Presentation\Views\ManagerPage.xaml line 89
                        this.obj6 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 7: // Presentation\Views\ManagerPage.xaml line 91
                        this.obj7 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 8: // Presentation\Views\ManagerPage.xaml line 94
                        this.obj8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_8(this.obj8);
                        break;
                    case 9: // Presentation\Views\ManagerPage.xaml line 105
                        this.obj9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 10: // Presentation\Views\ManagerPage.xaml line 106
                        this.obj10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 11: // Presentation\Views\ManagerPage.xaml line 107
                        this.obj11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj5.Target as global::Microsoft.UI.Xaml.Controls.Border).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::it_tools.DataAccess.Models.Tool>(item), 1 << phase);
            }

            public void Recycle()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IManagerPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::it_tools.DataAccess.Models.Tool>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::it_tools.DataAccess.Models.Tool obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_name(obj.name, phase);
                        this.Update_status(obj.status, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_access_level(obj.access_level, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_idTool(obj.idTool, phase);
                    }
                }
            }
            private void Update_name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 89
                    if (!isobj6TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj6, obj, null);
                    }
                }
            }
            private void Update_status(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 91
                    if (!isobj7TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                    }
                }
            }
            private void Update_access_level(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 94
                    if (!isobj8SelectedValueDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedValue(this.obj8, obj, null);
                    }
                }
            }
            private void Update_idTool(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 94
                    if (!isobj8TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj8, obj, null);
                    }
                    // Presentation\Views\ManagerPage.xaml line 105
                    if (!isobj9TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj9, obj, null);
                    }
                    // Presentation\Views\ManagerPage.xaml line 106
                    if (!isobj10TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj10, obj, null);
                    }
                    // Presentation\Views\ManagerPage.xaml line 107
                    if (!isobj11TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj11, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_8_SelectedValue()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        this.dataRoot.access_level = (global::System.String)this.obj8.SelectedValue;
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class ManagerPage_obj5_BindingsTracking
            {
                private global::System.WeakReference<ManagerPage_obj5_Bindings> weakRefToBindingObj; 

                public ManagerPage_obj5_BindingsTracking(ManagerPage_obj5_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<ManagerPage_obj5_Bindings>(obj);
                }

                public ManagerPage_obj5_Bindings TryGetBindingObject()
                {
                    ManagerPage_obj5_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ManagerPage_obj5_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::it_tools.DataAccess.Models.Tool obj = sender as global::it_tools.DataAccess.Models.Tool;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_access_level(obj.access_level, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "access_level":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_access_level(obj.access_level, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::it_tools.DataAccess.Models.Tool obj)
                {
                    ManagerPage_obj5_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void RegisterTwoWayListener_8(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedValueProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_8_SelectedValue();
                        }
                    });
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ManagerPage_obj13_Bindings :
            global::Microsoft.UI.Xaml.IDataTemplateExtension,
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IManagerPage_Bindings
        {
            private global::it_tools.DataAccess.Models.UpgradeRequest dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj13;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj14;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj15;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj16;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj17;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj18;
            private global::Microsoft.UI.Xaml.Controls.TextBlock obj19;
            private global::Microsoft.UI.Xaml.Controls.Button obj20;
            private global::Microsoft.UI.Xaml.Controls.Button obj21;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj14TextDisabled = false;
            private static bool isobj15TextDisabled = false;
            private static bool isobj16TextDisabled = false;
            private static bool isobj17TextDisabled = false;
            private static bool isobj18TextDisabled = false;
            private static bool isobj19TextDisabled = false;
            private static bool isobj20TagDisabled = false;
            private static bool isobj21TagDisabled = false;

            public ManagerPage_obj13_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 65 && columnNumber == 44)
                {
                    isobj14TextDisabled = true;
                }
                else if (lineNumber == 66 && columnNumber == 44)
                {
                    isobj15TextDisabled = true;
                }
                else if (lineNumber == 67 && columnNumber == 44)
                {
                    isobj16TextDisabled = true;
                }
                else if (lineNumber == 68 && columnNumber == 44)
                {
                    isobj17TextDisabled = true;
                }
                else if (lineNumber == 69 && columnNumber == 44)
                {
                    isobj18TextDisabled = true;
                }
                else if (lineNumber == 70 && columnNumber == 44)
                {
                    isobj19TextDisabled = true;
                }
                else if (lineNumber == 72 && columnNumber == 62)
                {
                    isobj20TagDisabled = true;
                }
                else if (lineNumber == 73 && columnNumber == 62)
                {
                    isobj21TagDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 13: // Presentation\Views\ManagerPage.xaml line 63
                        this.obj13 = new global::System.WeakReference(global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Border>(target));
                        break;
                    case 14: // Presentation\Views\ManagerPage.xaml line 65
                        this.obj14 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 15: // Presentation\Views\ManagerPage.xaml line 66
                        this.obj15 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 16: // Presentation\Views\ManagerPage.xaml line 67
                        this.obj16 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 17: // Presentation\Views\ManagerPage.xaml line 68
                        this.obj17 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 18: // Presentation\Views\ManagerPage.xaml line 69
                        this.obj18 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 19: // Presentation\Views\ManagerPage.xaml line 70
                        this.obj19 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                        break;
                    case 20: // Presentation\Views\ManagerPage.xaml line 72
                        this.obj20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 21: // Presentation\Views\ManagerPage.xaml line 73
                        this.obj21 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            public void DataContextChangedHandler(global::Microsoft.UI.Xaml.FrameworkElement sender, global::Microsoft.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Microsoft.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj13.Target as global::Microsoft.UI.Xaml.Controls.Border).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_(global::WinRT.CastExtensions.As<global::it_tools.DataAccess.Models.UpgradeRequest>(item), 1 << phase);
            }

            public void Recycle()
            {
            }

            // IManagerPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::it_tools.DataAccess.Models.UpgradeRequest>(newDataRoot);
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::it_tools.DataAccess.Models.UpgradeRequest obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_IdRequest(obj.IdRequest, phase);
                        this.Update_Username(obj.Username, phase);
                        this.Update_Level(obj.Level, phase);
                        this.Update_Status(obj.Status, phase);
                        this.Update_CreatedAt(obj.CreatedAt, phase);
                        this.Update_HandledAt(obj.HandledAt, phase);
                    }
                }
            }
            private void Update_IdRequest(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 65
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                    }
                    // Presentation\Views\ManagerPage.xaml line 72
                    if (!isobj20TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj20, obj, null);
                    }
                    // Presentation\Views\ManagerPage.xaml line 73
                    if (!isobj21TagDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_FrameworkElement_Tag(this.obj21, obj, null);
                    }
                }
            }
            private void Update_Username(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 66
                    if (!isobj15TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj15, obj, null);
                    }
                }
            }
            private void Update_Level(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 67
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj16, obj, null);
                    }
                }
            }
            private void Update_Status(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 68
                    if (!isobj17TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj17, obj, null);
                    }
                }
            }
            private void Update_CreatedAt(global::System.DateTime obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 69
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj.ToString(), null);
                    }
                }
            }
            private void Update_HandledAt(global::System.Nullable<global::System.DateTime> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 70
                    if (!isobj19TextDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_TextBlock_Text(this.obj19, obj.ToString(), null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class ManagerPage_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IManagerPage_Bindings
        {
            private global::it_tools.Presentation.Views.ManagerPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.ListView obj2;
            private global::Microsoft.UI.Xaml.Controls.ListView obj3;
            private global::Microsoft.UI.Xaml.Controls.ComboBox obj24;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj2ItemsSourceDisabled = false;
            private static bool isobj3ItemsSourceDisabled = false;
            private static bool isobj24ItemsSourceDisabled = false;
            private static bool isobj24SelectedItemDisabled = false;

            private ManagerPage_obj1_BindingsTracking bindingsTracking;

            public ManagerPage_obj1_Bindings()
            {
                this.bindingsTracking = new ManagerPage_obj1_BindingsTracking(this);
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 60 && columnNumber == 23)
                {
                    isobj2ItemsSourceDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 23)
                {
                    isobj3ItemsSourceDisabled = true;
                }
                else if (lineNumber == 29 && columnNumber == 21)
                {
                    isobj24ItemsSourceDisabled = true;
                }
                else if (lineNumber == 30 && columnNumber == 21)
                {
                    isobj24SelectedItemDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Presentation\Views\ManagerPage.xaml line 59
                        this.obj2 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        break;
                    case 3: // Presentation\Views\ManagerPage.xaml line 83
                        this.obj3 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                        break;
                    case 24: // Presentation\Views\ManagerPage.xaml line 28
                        this.obj24 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                        this.bindingsTracking.RegisterTwoWayListener_24(this.obj24);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IManagerPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::it_tools.Presentation.Views.ManagerPage>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::it_tools.Presentation.Views.ManagerPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::it_tools.Presentation.ViewModels.ManagementViewModel obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_Requests(obj.Requests, phase);
                        this.Update_ViewModel_Tools(obj.Tools, phase);
                        this.Update_ViewModel_ToolCategories(obj.ToolCategories, phase);
                        this.Update_ViewModel_SelectedToolCategory(obj.SelectedToolCategory, phase);
                    }
                }
            }
            private void Update_ViewModel_Requests(global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.UpgradeRequest> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Requests(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 59
                    if (!isobj2ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj2, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Tools(global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.Tool> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_Tools(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 83
                    if (!isobj3ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj3, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ToolCategories(global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.ToolCategory> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_ToolCategories(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 28
                    if (!isobj24ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj24, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SelectedToolCategory(global::it_tools.DataAccess.Models.ToolCategory obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Presentation\Views\ManagerPage.xaml line 28
                    if (!isobj24SelectedItemDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj24, obj, null);
                    }
                }
            }
            private void UpdateTwoWay_24_SelectedItem()
            {
                if (this.initialized)
                {
                    if (this.dataRoot != null)
                    {
                        if (this.dataRoot.ViewModel != null)
                        {
                            this.dataRoot.ViewModel.SelectedToolCategory = (global::it_tools.DataAccess.Models.ToolCategory)this.obj24.SelectedItem;
                        }
                    }
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class ManagerPage_obj1_BindingsTracking
            {
                private global::System.WeakReference<ManagerPage_obj1_Bindings> weakRefToBindingObj; 

                public ManagerPage_obj1_BindingsTracking(ManagerPage_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<ManagerPage_obj1_Bindings>(obj);
                }

                public ManagerPage_obj1_Bindings TryGetBindingObject()
                {
                    ManagerPage_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_Requests(null);
                    UpdateChildListeners_ViewModel_Tools(null);
                    UpdateChildListeners_ViewModel_ToolCategories(null);
                }

                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ManagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::it_tools.Presentation.ViewModels.ManagementViewModel obj = sender as global::it_tools.Presentation.ViewModels.ManagementViewModel;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_Requests(obj.Requests, DATA_CHANGED);
                                bindings.Update_ViewModel_Tools(obj.Tools, DATA_CHANGED);
                                bindings.Update_ViewModel_ToolCategories(obj.ToolCategories, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedToolCategory(obj.SelectedToolCategory, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Requests":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Requests(obj.Requests, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Tools":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_Tools(obj.Tools, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ToolCategories":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_ToolCategories(obj.ToolCategories, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedToolCategory":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedToolCategory(obj.SelectedToolCategory, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::it_tools.Presentation.ViewModels.ManagementViewModel cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::it_tools.Presentation.ViewModels.ManagementViewModel obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Requests(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ManagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.UpgradeRequest> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.UpgradeRequest>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Requests(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ManagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.UpgradeRequest> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.UpgradeRequest>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.UpgradeRequest> cache_ViewModel_Requests = null;
                public void UpdateChildListeners_ViewModel_Requests(global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.UpgradeRequest> obj)
                {
                    if (obj != cache_ViewModel_Requests)
                    {
                        if (cache_ViewModel_Requests != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Requests).PropertyChanged -= PropertyChanged_ViewModel_Requests;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Requests).CollectionChanged -= CollectionChanged_ViewModel_Requests;
                            cache_ViewModel_Requests = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Requests = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Requests;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Requests;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_Tools(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ManagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.Tool> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.Tool>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_Tools(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ManagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.Tool> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.Tool>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.Tool> cache_ViewModel_Tools = null;
                public void UpdateChildListeners_ViewModel_Tools(global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.Tool> obj)
                {
                    if (obj != cache_ViewModel_Tools)
                    {
                        if (cache_ViewModel_Tools != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_Tools).PropertyChanged -= PropertyChanged_ViewModel_Tools;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_Tools).CollectionChanged -= CollectionChanged_ViewModel_Tools;
                            cache_ViewModel_Tools = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_Tools = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_Tools;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_Tools;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_ToolCategories(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    ManagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.ToolCategory> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.ToolCategory>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_ToolCategories(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    ManagerPage_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.ToolCategory> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.ToolCategory>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.ToolCategory> cache_ViewModel_ToolCategories = null;
                public void UpdateChildListeners_ViewModel_ToolCategories(global::System.Collections.ObjectModel.ObservableCollection<global::it_tools.DataAccess.Models.ToolCategory> obj)
                {
                    if (obj != cache_ViewModel_ToolCategories)
                    {
                        if (cache_ViewModel_ToolCategories != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_ToolCategories).PropertyChanged -= PropertyChanged_ViewModel_ToolCategories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_ToolCategories).CollectionChanged -= CollectionChanged_ViewModel_ToolCategories;
                            cache_ViewModel_ToolCategories = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_ToolCategories = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_ToolCategories;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_ToolCategories;
                        }
                    }
                }
                public void RegisterTwoWayListener_24(global::Microsoft.UI.Xaml.Controls.ComboBox sourceObject)
                {
                    sourceObject.RegisterPropertyChangedCallback(global::Microsoft.UI.Xaml.Controls.Primitives.Selector.SelectedItemProperty, (sender, prop) =>
                    {
                        var bindingObj = this.TryGetBindingObject();
                        if (bindingObj != null)
                        {
                            bindingObj.UpdateTwoWay_24_SelectedItem();
                        }
                    });
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Presentation\Views\ManagerPage.xaml line 59
                {
                    this.RequestListView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                }
                break;
            case 3: // Presentation\Views\ManagerPage.xaml line 83
                {
                    this.ToolListView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                }
                break;
            case 8: // Presentation\Views\ManagerPage.xaml line 94
                {
                    global::Microsoft.UI.Xaml.Controls.ComboBox element8 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                    ((global::Microsoft.UI.Xaml.Controls.ComboBox)element8).SelectionChanged += this.AccessLevelComboBox_SelectionChanged;
                }
                break;
            case 9: // Presentation\Views\ManagerPage.xaml line 105
                {
                    global::Microsoft.UI.Xaml.Controls.Button element9 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element9).Click += this.EnableTool_Click;
                }
                break;
            case 10: // Presentation\Views\ManagerPage.xaml line 106
                {
                    global::Microsoft.UI.Xaml.Controls.Button element10 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element10).Click += this.DisableTool_Click;
                }
                break;
            case 11: // Presentation\Views\ManagerPage.xaml line 107
                {
                    global::Microsoft.UI.Xaml.Controls.Button element11 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element11).Click += this.DeleteTool_Click;
                }
                break;
            case 20: // Presentation\Views\ManagerPage.xaml line 72
                {
                    global::Microsoft.UI.Xaml.Controls.Button element20 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element20).Click += this.Accept_Click;
                }
                break;
            case 21: // Presentation\Views\ManagerPage.xaml line 73
                {
                    global::Microsoft.UI.Xaml.Controls.Button element21 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element21).Click += this.Reject_Click;
                }
                break;
            case 22: // Presentation\Views\ManagerPage.xaml line 20
                {
                    this.ToolNameTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 23: // Presentation\Views\ManagerPage.xaml line 24
                {
                    this.ToolDescriptionTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 24: // Presentation\Views\ManagerPage.xaml line 28
                {
                    this.ToolTypeComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                }
                break;
            case 25: // Presentation\Views\ManagerPage.xaml line 36
                {
                    this.AccessLevelComboBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ComboBox>(target);
                }
                break;
            case 26: // Presentation\Views\ManagerPage.xaml line 51
                {
                    this.IconUrlTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 27: // Presentation\Views\ManagerPage.xaml line 54
                {
                    global::Microsoft.UI.Xaml.Controls.Button element27 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element27).Click += this.AddTool_Click;
                }
                break;
            case 28: // Presentation\Views\ManagerPage.xaml line 45
                {
                    this.DllPathTextBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 29: // Presentation\Views\ManagerPage.xaml line 46
                {
                    global::Microsoft.UI.Xaml.Controls.Button element29 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Button)element29).Click += this.BrowseDll_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Presentation\Views\ManagerPage.xaml line 1
                {                    
                    global::Microsoft.UI.Xaml.Controls.Page element1 = (global::Microsoft.UI.Xaml.Controls.Page)target;
                    ManagerPage_obj1_Bindings bindings = new ManagerPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 5: // Presentation\Views\ManagerPage.xaml line 87
                {                    
                    global::Microsoft.UI.Xaml.Controls.Border element5 = (global::Microsoft.UI.Xaml.Controls.Border)target;
                    ManagerPage_obj5_Bindings bindings = new ManagerPage_obj5_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element5.DataContext);
                    element5.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element5, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element5, bindings);
                }
                break;
            case 13: // Presentation\Views\ManagerPage.xaml line 63
                {                    
                    global::Microsoft.UI.Xaml.Controls.Border element13 = (global::Microsoft.UI.Xaml.Controls.Border)target;
                    ManagerPage_obj13_Bindings bindings = new ManagerPage_obj13_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element13.DataContext);
                    element13.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Microsoft.UI.Xaml.DataTemplate.SetExtensionInstance(element13, bindings);
                    global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element13, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

